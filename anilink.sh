#!/bin/bash

# --- CONFIGURATION ---
CSV_FILE="anime.csv"
DATA_SOURCE="data.txt"

# --- INITIALIZATION ---
# Ki·ªÉm tra n·∫øu file CSV ch∆∞a t·ªìn t·∫°i th√¨ t·∫°o m·ªõi v√† th√™m header
if [ ! -f "$CSV_FILE" ]; then
    echo "anime_title,episode_title,episode_url,iframe_src" > "$CSV_FILE"
    echo "‚úÖ ƒê√£ t·∫°o file '$CSV_FILE' v√† s·∫µn s√†ng ghi d·ªØ li·ªáu."
fi
echo "---"

# Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa file data.txt
if [ ! -f "$DATA_SOURCE" ]; then
    echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file '$DATA_SOURCE'. H√£y t·∫°o file n√†y v√† th√™m link v√†o nh√©."
    exit 1
fi

# --- MAIN PROCESSING LOOP ---
# V√≤ng l·∫∑p s·∫Ω ti·∫øp t·ª•c ch·∫°y mi·ªÖn l√† file data.txt c√≤n n·ªôi dung (ch∆∞a b·ªã tr·ªëng)
while [ -s "$DATA_SOURCE" ]; do
    
    # ƒê·ªçc D√íNG ƒê·∫¶U TI√äN c·ªßa file data.txt v√†o bi·∫øn main_url
    main_url=$(head -n 1 "$DATA_SOURCE")

    # B·ªè qua n·∫øu d√≤ng r·ªóng (tr∆∞·ªùng h·ª£p file c√≥ d√≤ng tr·ªëng cu·ªëi)
    if [ -z "$main_url" ]; then
        # X√≥a d√≤ng tr·ªëng n√†y v√† ti·∫øp t·ª•c v√≤ng l·∫∑p
        sed -i '1d' "$DATA_SOURCE" 
        continue
    fi

    echo "‚öôÔ∏è ƒêang x·ª≠ l√Ω trang ch√≠nh: $main_url"
    
    # T·∫£i n·ªôi dung trang ch√≠nh
    main_page_content=$(curl -sL "$main_url")
    if [ $? -ne 0 ]; then
        echo "‚ùå L·ªói: Kh√¥ng th·ªÉ t·∫£i n·ªôi dung t·ª´ '$main_url'. B·ªè qua."
        # X√≥a d√≤ng n√†y ƒëi ƒë·ªÉ kh√¥ng x·ª≠ l√Ω l·∫°i trong l·∫ßn ch·∫°y sau
        sed -i '1d' "$DATA_SOURCE"
        continue
    fi
    
    # Tr√≠ch xu·∫•t ti√™u ƒë·ªÅ ch√≠nh
    main_title=$(echo "$main_page_content" | sed -n 's/.*<h1 class="heading_movie">\([^<]*\)<\/h1>.*/\1/p' | head -n 1)
    
    # L√†m s·∫°ch ti√™u ƒë·ªÅ ƒë·ªÉ t·∫°o t√™n th∆∞ m·ª•c h·ª£p l·ªá
    sanitized_title=$(echo "$main_title" | sed 's/[[:space:]]*$//' | sed 's/[[:punct:]]//g' | sed 's/ /_/g')

    if [ -z "$sanitized_title" ]; then
        echo "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y ti√™u ƒë·ªÅ cho trang '$main_url'. B·ªè qua."
        sed -i '1d' "$DATA_SOURCE"
        continue
    fi
    
    echo "‚ú® T√¨m th·∫•y ti√™u ƒë·ªÅ: '$main_title'"
    
    # T·∫°o th∆∞ m·ª•c v√† l∆∞u index.html
    mkdir -p "$sanitized_title"
    echo "$main_page_content" > "$sanitized_title/index.html"
    echo "üìÅ  ƒê√£ t·∫°o th∆∞ m·ª•c v√† l∆∞u index.html t·∫°i: '$sanitized_title'"

    # Tr√≠ch xu·∫•t kh·ªëi ch·ª©a danh s√°ch c√°c t·∫≠p
    episode_block=$(echo "$main_page_content" | sed -n '/<div class="list-item-episode scroll-bar">/,/<\/div>/p')
    
    # L·∫•y link v√† t√™n c·ªßa t·ª´ng t·∫≠p
    mapfile -t episode_links < <(echo "$episode_block" | grep -oP '<a href="\K[^"]+')
    mapfile -t episode_names < <(echo "$episode_block" | grep -oP '<span>\K[^<]+')

    num_episodes=${#episode_links[@]}

    if [ "$num_episodes" -eq 0 ]; then
        echo "ü§î Kh√¥ng t√¨m th·∫•y t·∫≠p phim n√†o cho '$main_title'."
        echo "\"$main_title\",\"NO_EPISODES_FOUND\",\"\",\"\"" >> "$CSV_FILE"
        echo "---"
        # X·ª¨ L√ù XONG URL N√ÄY, TI·∫æN H√ÄNH X√ìA D√íNG ƒê·∫¶U TI√äN C·ª¶A data.txt
        sed -i '1d' "$DATA_SOURCE"
        continue
    fi
    
    echo "üîç T√¨m th·∫•y t·ªïng c·ªông $num_episodes t·∫≠p phim. B·∫Øt ƒë·∫ßu x·ª≠ l√Ω t·ª´ng t·∫≠p..."
    
    for (( i=0; i<num_episodes; i++ )); do
        episode_path="${episode_links[$i]}"
        
        # X√¢y d·ª±ng URL ƒë·∫ßy ƒë·ªß cho t·∫≠p phim
        if [[ ! "$episode_path" == http* ]]; then
            base_url=$(echo "$main_url" | grep -oP '^(https?://[^/]+)')
            episode_url="$base_url$episode_path"
        else
            episode_url="$episode_path"
        fi

        # T√≠nh to√°n s·ªë th·ª© t·ª± file (ƒë·ªÉ l∆∞u file theo th·ª© t·ª± ng∆∞·ª£c)
        file_number=$((num_episodes - i))
        episode_title="${episode_names[$i]}"
        
        echo "    ‚û°Ô∏è  ƒêang x·ª≠ l√Ω '${episode_title}'..."
        
        # T·∫£i n·ªôi dung c·ªßa trang t·∫≠p phim
        episode_content=$(curl -sL "$episode_url")
        if [ $? -ne 0 ]; then
            echo "    ‚ùå L·ªói khi t·∫£i '${episode_title}'. B·ªè qua."
            # Ghi nh·∫≠n l·ªói nh∆∞ng v·∫´n ti·∫øp t·ª•c v·ªõi c√°c t·∫≠p kh√°c
            echo "\"$main_title\",\"$episode_title\",\"$episode_url\",\"CURL_ERROR\"" >> "$CSV_FILE"
            continue
        fi
        
        # L∆∞u n·ªôi dung t·∫≠p phim v√†o file
        echo "$episode_content" > "$sanitized_title/$file_number.html"
        
        # Tr√≠ch xu·∫•t src t·ª´ th·∫ª iframe
        iframe_src=$(echo "$episode_content" | grep -oP '<iframe id="ss_if"[^>]*src="\K[^"]+')

        if [ -z "$iframe_src" ]; then
             echo "    ‚ùì Kh√¥ng t√¨m th·∫•y iframe trong t·∫≠p: $file_number.html"
             iframe_src="NOT_FOUND"
        fi

        # Ghi th√¥ng tin v√†o file CSV
        echo "\"$main_title\",\"$episode_title\",\"$episode_url\",\"$iframe_src\"" >> "$CSV_FILE"

    done

    echo "‚úÖ Ho√†n t·∫•t x·ª≠ l√Ω t·∫•t c·∫£ c√°c t·∫≠p c·ªßa '$main_title'."
    
    sed -i '1d' "$DATA_SOURCE"
    echo "üóëÔ∏è  ƒê√£ x·ª≠ l√Ω v√† x√≥a URL '$main_url' kh·ªèi file '$DATA_SOURCE'."
    
    echo "---"

done

echo "üéâ M·ªçi th·ª© ƒë√£ ho√†n t·∫•t! File '$DATA_SOURCE' gi·ªù ƒë√£ tr·ªëng."
echo "   H√£y ki·ªÉm tra file '$CSV_FILE' v√† c√°c th∆∞ m·ª•c nh√©, Big Boss D·ªØ Li·ªáu! (‡∏á ‚Ä¢ÃÄ_‚Ä¢ÃÅ)‡∏á"
